{"version":3,"sources":["common/utils.ts","components/Logo/index.tsx","components/ToggleButton/index.tsx","components/Filter/index.tsx","components/FilterList/index.tsx","components/CodeBin/index.tsx","common/filters.ts","App.tsx","serviceWorker.ts","index.tsx","components/Filter/styles.scss","styles.scss","components/ToggleButton/styles.scss","components/Logo/styles.scss","components/CodeBin/styles.scss"],"names":["_cs","args","filter","a","join","getPre","tag","Logo","props","classNames","styles","logo","className","o","ToggleButton","toggleButton","checked","push","on","onClick","onToggle","knob","Filter","filterId","onChange","filterName","filterSettings","settingsStates","handleToggle","useCallback","update","id","value","newSettingsStates","classOptions","options","settingsElements","map","setting","val","key","settings","name","type","default","e","target","header","FilterList","filterStates","onSettingsChange","newFilterStates","handleChange","filterList","filterElements","filters","f","CodeBin","selectedFilters","headTags","location","content","bodyTags","preHead","preBody","htmlText","handleCopy","navigator","clipboard","writeText","codeBin","copy","title","language","obj","filepath","inputType","App","useState","setFilterStates","setSettingsStates","main","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"2OAAaA,EAAM,SAACC,GAAD,OACjBA,EAAKC,QAAO,SAAAC,GAAC,QAAMA,KAAGC,KAAK,MAGhBC,EAAS,SAACC,GACrB,MAAY,KAARA,EACK,GAGA,Q,gBCDI,SAASC,EAAKC,GAE3B,IAAMC,EAAa,CAACC,IAAOC,KAAMH,EAAMI,WAEvC,OACE,yBAAKA,UAAWZ,EAAIS,IAApB,MACK,0BAAMG,UAAWF,IAAOG,IAD7B,M,mDCHW,SAASC,EAAaN,GAEnC,IAAMC,EAAa,CAACC,IAAOK,aAAcP,EAAMI,WAK/C,OAJIJ,EAAMQ,SACRP,EAAWQ,KAAKP,IAAOQ,IAIvB,4BAAQN,UAAWZ,EAAIS,GAAaU,QAASX,EAAMY,UACjD,yBAAKR,UAAWF,IAAOW,Q,oBCFd,SAASC,EAAOd,GAAmB,IACxCe,EAAsFf,EAAtFe,SAAUH,EAA4EZ,EAA5EY,SAAUI,EAAkEhB,EAAlEgB,SAAUC,EAAwDjB,EAAxDiB,WAAYC,EAA4ClB,EAA5CkB,eAAgBV,EAA4BR,EAA5BQ,QAASW,EAAmBnB,EAAnBmB,eAErEC,EAAeC,uBACnB,WACET,EAASG,KACR,CAACH,EAAUG,IAGVO,EAASD,uBACb,SAACE,EAAYC,GACX,IAAMC,EAAiB,2BAClBN,GADkB,kBAEpBI,EAAKC,IAERR,EAASD,EAAUU,KAClB,CAACT,EAAUD,EAAUI,IAGpBlB,EAAa,CAACC,IAAOR,OAAQM,EAAMI,WAEnCsB,EAAe,CAACxB,IAAOyB,SACzB3B,EAAMQ,SACRkB,EAAajB,KAAKP,IAAOQ,IAG3B,IAAMkB,EAAmBV,EAAeW,KAAI,SAAAC,GAC1C,IAAMC,EAAMZ,EAAeW,EAAQP,IACnC,OACI,yBAAKS,IAAKF,EAAQP,GAAInB,UAAWF,IAAO+B,UACtC,+BAAKH,EAAQI,KAAb,KACA,2BAAOC,KAAK,OAAOX,MAAOO,GAAOD,EAAQM,QAASpB,SAAU,SAACqB,GACzDf,EAAOQ,EAAQP,GAAIc,EAAEC,OAAOd,cAQxC,OACE,yBAAKpB,UAAWZ,EAAIS,IAClB,yBAAKG,UAAWF,IAAOqC,QACrB,+BAAKtB,EAAL,KACA,kBAACX,EAAD,CAAcE,QAASA,EAASI,SAAUQ,KAE5C,yBAAKhB,UAAWZ,EAAIkC,IACjBE,IChDM,SAASY,EAAWxC,GAAmB,IAC5CyC,EAA6DzC,EAA7DyC,aAAczB,EAA+ChB,EAA/CgB,SAAUG,EAAqCnB,EAArCmB,eAAgBuB,EAAqB1C,EAArB0C,iBAE1CtB,EAAeC,uBACnB,SAACN,GACC,IAAM4B,EAAe,2BAChBF,GADgB,kBAElB1B,GAAY0B,EAAa1B,KAE5BC,EAAS2B,KACR,CAACF,EAAczB,IAGd4B,EAAevB,uBACnB,SAACN,EAAkBS,GACjB,IAAMC,EAAiB,2BAClBN,GADkB,kBAEpBJ,EAAWS,IAEdkB,EAAiBjB,KAChB,CAACN,EAAgBuB,IAGhBzC,EAAa,CAACC,IAAO2C,WAAY7C,EAAMI,WAEvC0C,EAAiB9C,EAAM+C,QAAQlB,KAAI,SAAAmB,GAAC,OACxC,kBAAClC,EAAD,CACEkB,IAAKgB,EAAEzB,GACPN,WAAY+B,EAAEd,KACdnB,SAAUiC,EAAEzB,GACZL,eAAgB8B,EAAEf,SAClBrB,SAAUQ,EACVJ,SAAU4B,EACVpC,UAAWR,EAAMyC,aAAaO,EAAEzB,IAChCJ,eAAgBA,EAAe6B,EAAEzB,KAAO,QAI5C,OACE,yBAAKnB,UAAWZ,EAAIS,IACjB6C,G,qCC3CQ,SAASG,EAAQjD,GAAmB,IACzCyC,EAAqDzC,EAArDyC,aAAcM,EAAuC/C,EAAvC+C,QAAS3C,EAA8BJ,EAA9BI,UAAWe,EAAmBnB,EAAnBmB,eAEpC+B,EAAkBH,EAAQrD,QAAO,SAAAA,GAAM,OAAI+C,EAAa/C,EAAO6B,OAEjE4B,EAAWD,EACZxD,QAAO,SAAAA,GAAM,MAAwB,SAApBA,EAAO0D,YACxBvB,KAAI,SAAAnC,GACH,OAAOA,EAAO2D,QAAQlC,EAAezB,EAAO6B,KAAO,OAEpD3B,KAAK,QAEJ0D,EAAWJ,EACZxD,QAAO,SAAAA,GAAM,MAAwB,SAApBA,EAAO0D,YACxBvB,KAAI,SAAAnC,GAAM,OAAIA,EAAO2D,QAAQ,OAC7BzD,KAAK,QAEF2D,EAAU1D,EAAOsD,GACjBK,EAAU3D,EAAOyD,GAEvBH,EAAQ,UAAMI,GAAN,OAAgBJ,GACxBG,EAAQ,UAAME,GAAN,OAAgBF,GAExB,IAAMG,EAAQ,qEAIUN,EAJV,4BAMRG,EANQ,sBAURI,EAAarC,uBAAY,WAC7BsC,UAAUC,UAAUC,UAAUJ,KAC7B,CAACA,IAEExD,EAAa,CAACC,IAAO4D,QAAS1D,GAEpC,OACE,yBAAKA,UAAWZ,EAAIS,IAClB,4BAAQG,UAAWF,IAAO6D,KAAMC,MAAM,OAAOrD,QAAS+C,GACpD,0BAAMtD,UAAU,iBAElB,kBAAC,IAAD,CAAW6D,SAAS,QACjBR,I,oBCxDIV,EAAU,CACrB,CACEb,KAAM,WACNX,GAAI,WACJ8B,QAAS,SAACa,GAAD,8GACTd,SAAU,OACVnB,SAAU,IAEZ,CACEC,KAAM,UACNX,GAAI,UACJ8B,QAAS,SAACa,GACR,MAAM,gCAAN,OAAuCA,EAAI/B,MAAQ,MAAnD,mBAAmE+B,EAAIC,UAAY,cAAnF,OAEFf,SAAU,OACVnB,SAAU,CACR,CACEV,GAAI,OACJW,KAAM,OACNkC,UAAW,OACXhC,QAAS,OAEX,CACEb,GAAI,WACJW,KAAM,WACNkC,UAAW,OACXhC,QAAS,iBAIf,CACEF,KAAM,mBACNX,GAAI,cACJ8B,QAAS,SAACa,GAAD,+GACTd,SAAU,OACVnB,SAAU,IAEZ,CACEC,KAAM,wBACNX,GAAI,QACJ8B,QAAS,SAACa,GACR,MAAM,gCAAN,OAAuCA,EAAIC,UAAY,YAAvD,OAEFf,SAAU,OACVnB,SAAU,CACR,CACEV,GAAI,WACJW,KAAM,WACNkC,UAAW,SACXhC,QAAS,eAIf,CACEF,KAAM,eACNX,GAAI,QACJ8B,QAAS,SAACa,GAAD,8EACTd,SAAU,OACVnB,SAAU,IAEZ,CACEC,KAAM,SACNX,GAAI,SACJ8B,QAAS,SAACa,GAAD,8EACTd,SAAU,OACVnB,SAAU,IAEZ,CACEC,KAAM,oBACNX,GAAI,OACJ8B,QAAS,SAACa,GACR,MAAM,uCAAN,OAA8CA,EAAIC,UAAY,WAA9D,iBAEFf,SAAU,OACVnB,SAAU,CACR,CACEV,GAAI,WACJW,KAAM,WACNkC,UAAW,SACXhC,QAAS,cAIf,CACEF,KAAM,sBACNX,GAAI,OACJ8B,QAAS,SAACa,GAAD,uFACTd,SAAU,OACVnB,SAAU,KCrDCoC,MA5Bf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACN7B,EADM,KACQ8B,EADR,OAG+BD,mBAAS,IAHxC,mBAGNnD,EAHM,KAGUqD,EAHV,KAKb,OACE,6BACE,kBAACzE,EAAD,CAAMK,UAAWF,IAAOC,OACxB,yBAAKC,UAAWF,IAAOuE,MACrB,kBAACjC,EAAD,CACEpC,UAAWF,IAAO2C,WAClBE,QAASA,EACTN,aAAcA,EACdzB,SAAUuD,EACVpD,eAAgBA,EAChBuB,iBAAkB8B,IAEpB,kBAACvB,EAAD,CACE7C,UAAWF,IAAO4D,QAClBf,QAASA,EACTN,aAAcA,EACdtB,eAAgBA,OClBNuD,QACW,cAA7BC,OAAOvB,SAASwB,UAEe,UAA7BD,OAAOvB,SAASwB,UAEhBD,OAAOvB,SAASwB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SDmIpB,kBAAmBtB,WACrBA,UAAUuB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEhJ5BC,EAAOC,QAAU,CAAC,OAAS,8CAA8C,OAAS,8CAA8C,QAAU,+CAA+C,GAAK,0CAA0C,SAAW,kD,kBCAnPD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,cAAc,iCAAiC,WAAa,iCAAiC,WAAW,8BAA8B,QAAU,gC,kBCApOD,EAAOC,QAAU,CAAC,gBAAgB,2DAA2D,aAAe,2DAA2D,KAAO,kDAAkD,GAAK,kD,kBCArOD,EAAOC,QAAU,CAAC,KAAO,0CAA0C,EAAI,yC,kBCAvED,EAAOC,QAAU,CAAC,WAAW,iDAAiD,QAAU,iDAAiD,KAAO,gD","file":"static/js/main.88546c4e.chunk.js","sourcesContent":["export const _cs = (args: (string | undefined)[]) =>\n  args.filter(a => !!a).join(' ');\n\n\nexport const getPre = (tag: string) => {\n  if (tag === '') {\n    return '';\n  }\n  else {\n    return '\\n  ';\n  }\n};\n","import React from 'react';\nimport { _cs } from 'common/utils';\nimport styles from './styles.scss';\n\ninterface PropTypes {\n  className?: string;\n}\n\nexport default function Logo(props: PropTypes) {\n\n  const classNames = [styles.logo, props.className];\n\n  return (\n    <div className={_cs(classNames)}>\n      zyg<span className={styles.o}></span>te\n    </div>\n  );\n}\n","import React from 'react';\nimport { _cs } from 'common/utils';\nimport styles from './styles.scss';\n\ninterface PropTypes {\n  className?: string;\n  checked?: boolean;\n  onToggle?: () => void;\n}\n\nexport default function ToggleButton(props: PropTypes) {\n\n  const classNames = [styles.toggleButton, props.className];\n  if (props.checked) {\n    classNames.push(styles.on);\n  }\n\n  return (\n    <button className={_cs(classNames)} onClick={props.onToggle}>\n      <div className={styles.knob} />\n    </button>\n  );\n}\n","import React, { useCallback } from 'react';\nimport ToggleButton from 'components/ToggleButton';\nimport { _cs } from 'common/utils';\nimport { FilterSettings, SettingsStates } from 'common/types';\nimport styles from './styles.scss';\n\ninterface PropTypes {\n  className?: string;\n  filterName: string;\n  filterId: string;\n  filterSettings: FilterSettings[];\n  settingsStates: SettingsStates;\n  checked: boolean;\n  onToggle: (v: string) => void;\n  onChange: (id: string, value: SettingsStates) => void;\n}\n\nexport default function Filter(props: PropTypes) {\n  const { filterId, onToggle, onChange, filterName, filterSettings, checked, settingsStates } = props;\n\n  const handleToggle = useCallback(\n    () => {\n      onToggle(filterId);\n    }, [onToggle, filterId]\n  );\n\n  const update = useCallback(\n    (id: string, value: string) => {\n      const newSettingsStates = {\n        ...settingsStates,\n        [id]: value,\n      };\n      onChange(filterId, newSettingsStates);\n    }, [onChange, filterId, settingsStates]\n  );\n\n  const classNames = [styles.filter, props.className];\n\n  const classOptions = [styles.options];\n  if (props.checked) {\n    classOptions.push(styles.on);\n  }\n\n  const settingsElements = filterSettings.map(setting => {\n    const val = settingsStates[setting.id];\n    return (\n        <div key={setting.id} className={styles.settings}>\n          <p> {setting.name} </p>\n          <input type=\"text\" value={val || setting.default} onChange={(e) => {\n              update(setting.id, e.target.value);\n            }\n          } />\n      </div>\n    );\n  });\n\n\n  return (\n    <div className={_cs(classNames)}>\n      <div className={styles.header}>\n        <p> {filterName} </p>\n        <ToggleButton checked={checked} onToggle={handleToggle}/>\n      </div>\n      <div className={_cs(classOptions)}>\n        {settingsElements}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { _cs } from 'common/utils';\nimport styles from './styles.scss';\nimport Filter from 'components/Filter';\n\nimport { FilterType, FilterStates, SettingsStates, GlobalSettingsStates } from 'common/types';\n\ninterface PropTypes {\n  className?: string;\n  filterStates: FilterStates;\n  filters: FilterType[];\n  settingsStates: GlobalSettingsStates;\n  onChange: (v: FilterStates) => void;\n  onSettingsChange: (v: GlobalSettingsStates) => void;\n}\n\nexport default function FilterList(props: PropTypes) {\n  const { filterStates, onChange, settingsStates, onSettingsChange } = props;\n\n  const handleToggle = useCallback(\n    (filterId: string) => {\n      const newFilterStates = {\n        ...filterStates,\n        [filterId]: !filterStates[filterId]\n      }\n      onChange(newFilterStates);\n    }, [filterStates, onChange]\n  );\n\n  const handleChange = useCallback(\n    (filterId: string, value: SettingsStates) => {\n      const newSettingsStates = {\n        ...settingsStates,\n        [filterId]: value\n      }\n      onSettingsChange(newSettingsStates);\n    }, [settingsStates, onSettingsChange]\n  );\n\n  const classNames = [styles.filterList, props.className];\n\n  const filterElements = props.filters.map(f =>\n    <Filter\n      key={f.id}\n      filterName={f.name}\n      filterId={f.id}\n      filterSettings={f.settings}\n      onToggle={handleToggle}\n      onChange={handleChange}\n      checked={!!props.filterStates[f.id]}\n      settingsStates={settingsStates[f.id] || {}}\n    />\n  );\n\n  return (\n    <div className={_cs(classNames)}>\n      {filterElements}\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { _cs, getPre } from 'common/utils';\nimport styles from './styles.scss';\nimport { FilterType, FilterStates, GlobalSettingsStates } from 'common/types';\nimport Highlight from 'react-highlight.js';\n\ninterface PropTypes {\n  className?: string;\n  filters: FilterType[];\n  filterStates: FilterStates;\n  settingsStates: GlobalSettingsStates;\n}\n\nexport default function CodeBin(props: PropTypes) {\n  const { filterStates, filters, className, settingsStates } = props;\n\n  const selectedFilters = filters.filter(filter => filterStates[filter.id]);\n\n  let headTags = selectedFilters\n    .filter(filter => filter.location === 'head')\n    .map(filter => {\n      return filter.content(settingsStates[filter.id] || {})\n    })\n    .join('\\n  ');\n\n  let bodyTags = selectedFilters\n    .filter(filter => filter.location === 'body')\n    .map(filter => filter.content({}))\n    .join('\\n  ');\n\n  const preHead = getPre(headTags);\n  const preBody = getPre(bodyTags);\n\n  headTags = `${preHead}${headTags}`;\n  bodyTags = `${preBody}${bodyTags}`;\n\n  const htmlText = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset='UTF-8'>${headTags}\n</head>\n<body>${bodyTags}\n</body>\n</html>`;\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(htmlText);\n  }, [htmlText]);\n\n  const classNames = [styles.codeBin, className];\n\n  return (\n    <div className={_cs(classNames)}>\n      <button className={styles.copy} title=\"Copy\" onClick={handleCopy}>\n        <span className=\"far fa-copy\"></span>\n      </button>\n      <Highlight language='html'>\n        {htmlText}\n      </Highlight>\n    </div>\n  );\n}\n","import { SettingsStates } from \"./types\";\n\nexport const filters = [\n  {\n    name: 'Viewport',\n    id: 'viewport',\n    content: (obj: SettingsStates) => `<meta name=\"viewport\" content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\">`,\n    location: 'head',\n    settings: []\n  },\n  {\n    name: 'Favicon',\n    id: 'favicon',\n    content: (obj: SettingsStates) => {\n      return `<link rel=\"icon\" type=\"image/${obj.type || 'png'}\" href=\"${obj.filepath || 'favicon.png'}\">`;\n    },\n    location: 'head',\n    settings: [\n      {\n        id: 'type',\n        name: 'Type',\n        inputType: 'text',\n        default: 'png'\n      },\n      {\n        id: 'filepath',\n        name: 'Filepath',\n        inputType: 'text',\n        default: 'favicon.png'\n      }\n    ]\n  },\n  {\n    name: 'Google Web Fonts',\n    id: 'googlefonts',\n    content: (obj: SettingsStates) => `<link href=\"https://fonts.googleapis.com/css?family=font1|font2|font3&display=swap\" rel=\"stylesheet\">`,\n    location: 'head',\n    settings: []\n  },\n  {\n    name: 'Linked CSS Stylesheet',\n    id: 'css-l',\n    content: (obj: SettingsStates) => {\n      return `<link rel=\"stylesheet\" href=\"${obj.filepath || 'index.css'}\">`;\n    },\n    location: 'head',\n    settings: [\n      {\n        id: 'filepath',\n        name: 'Filepath',\n        inputType: 'string',\n        default: 'index.css'\n      }\n    ]\n  },\n  {\n    name: 'Embedded CSS',\n    id: 'css-e',\n    content: (obj: SettingsStates) => `<style type=\"text/css\"> \\n    /* Enter your CSS here */ \\n  </style>`,\n    location: 'head',\n    settings: []\n  },\n  {\n    name: 'JQuery',\n    id: 'jquery',\n    content: (obj: SettingsStates) => `<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>`,\n    location: 'head',\n    settings: []\n  },\n  {\n    name: 'Linked JavaScript',\n    id: 'js-l',\n    content: (obj: SettingsStates) => {\n      return `<script type=\"text/javascript\" src=\"${obj.filepath || 'index.js'}\"></script>`;\n    },\n    location: 'head',\n    settings: [\n      {\n        id: 'filepath',\n        name: 'Filepath',\n        inputType: 'string',\n        default: 'index.js'\n      }\n    ]\n  },\n  {\n    name: 'Embedded JavaScript',\n    id: 'js-e',\n    content: (obj: SettingsStates) => `<script type=\"text/javascript\"> \\n    /* Enter your JS here */ \\n  </script>`,\n    location: 'body',\n    settings: []\n  },\n]\n","import React, { useState }  from 'react';\nimport Logo from 'components/Logo';\nimport FilterList from 'components/FilterList';\nimport CodeBin from 'components/CodeBin';\nimport styles from './styles.scss';\n\nimport { filters } from 'common/filters';\n\n\nfunction App() {\n  const [filterStates, setFilterStates] = useState({});\n\n  const [settingsStates, setSettingsStates] = useState({});\n\n  return (\n    <div>\n      <Logo className={styles.logo}/>\n      <div className={styles.main}>\n        <FilterList\n          className={styles.filterList}\n          filters={filters}\n          filterStates={filterStates}\n          onChange={setFilterStates}\n          settingsStates={settingsStates}\n          onSettingsChange={setSettingsStates}\n        />\n        <CodeBin\n          className={styles.codeBin}\n          filters={filters}\n          filterStates={filterStates}\n          settingsStates={settingsStates}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"src-components-Filter-styles__filter--3ufKX\",\"header\":\"src-components-Filter-styles__header--2eSCK\",\"options\":\"src-components-Filter-styles__options--3PzCJ\",\"on\":\"src-components-Filter-styles__on--2DaRH\",\"settings\":\"src-components-Filter-styles__settings--19SMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"src-styles__logo--1iXwd\",\"main\":\"src-styles__main--15Nxd\",\"filter-list\":\"src-styles__filter-list--1LS50\",\"filterList\":\"src-styles__filter-list--1LS50\",\"code-bin\":\"src-styles__code-bin--kN4dD\",\"codeBin\":\"src-styles__code-bin--kN4dD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"src-components-ToggleButton-styles__toggle-button--1f5Kv\",\"toggleButton\":\"src-components-ToggleButton-styles__toggle-button--1f5Kv\",\"knob\":\"src-components-ToggleButton-styles__knob--3pGKy\",\"on\":\"src-components-ToggleButton-styles__on--3lZlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"src-components-Logo-styles__logo--1F9iq\",\"o\":\"src-components-Logo-styles__o--52Ecf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code-bin\":\"src-components-CodeBin-styles__code-bin--cA2fx\",\"codeBin\":\"src-components-CodeBin-styles__code-bin--cA2fx\",\"copy\":\"src-components-CodeBin-styles__copy--3kBOF\"};"],"sourceRoot":""}